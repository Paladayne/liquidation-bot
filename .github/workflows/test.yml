name: Deploy app

on:
  push:
    branches:
    - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install rsync
      run: sudo apt install -y rsync git
    - name: Create ssh folder
      run: mkdir ${{ secrets.SSH_DIR }}
    - name: Writing private key
      run: echo '${{ secrets.SSH_PRIVATE_KEY }}' > ${{ secrets.KEY_PATH }}
    - name: Set permissions
      run: 'chown -R runner:  ${{ secrets.SSH_DIR }}; chmod 755  ${{ secrets.SSH_DIR }}; chmod 0600 ${{ secrets.KEY_PATH }}'
    - name: Check logs dir
      run: 'ssh -i ${{ secrets.KEY_PATH }} -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "if [ ! -d ${{ secrets.LOGS_DIR }} ]; then mkdir ${{ secrets.LOGS_DIR }}; fi"'
    - name: Transfering files by rsync
      run: 'rsync ${{ secrets.REPO_PATH }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }} --rsh "ssh -p 22 -i ${{ secrets.KEY_PATH }} -o StrictHostKeyChecking=no" --recursive -rltgoDzvO --delete'
    - name: Build deps
      run: 'ssh -i ${{ secrets.KEY_PATH }} -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "cd ${{ secrets.REMOTE_TARGET }} && yarn"'
    - name: Restart app
      run: 'ssh -i ${{ secrets.KEY_PATH }} -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "export PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}; cd ${{ secrets.REMOTE_TARGET }}; pm2 delete pm2.json; yarn add --dev tsconfig-paths; pm2 start pm2.json"'

name: Create docker image

on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: paladayne/liquid-bot:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
    
